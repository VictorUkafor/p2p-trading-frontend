/*! jQuery UI - v1.10.4 - 2014-04-14
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.slider.js
* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

(function (e, t) {
  function i(t, i) {
    let s,
      a,
      o,
      r = t.nodeName.toLowerCase(); return r === 'area' ? (s = t.parentNode, a = s.name, t.href && a && s.nodeName.toLowerCase() === 'map' ? (o = e(`img[usemap=#${a}]`)[0], !!o && n(o)) : !1) : (/input|select|textarea|button|object/.test(r) ? !t.disabled : r === 'a' ? t.href || i : i) && n(t);
  } function n(t) { return e.expr.filters.visible(t) && !e(t).parents().addBack().filter(function () { return e.css(this, 'visibility') === 'hidden'; }).length; } let s = 0,
    a = /^ui-id-\d+$/; e.ui = e.ui || {}, e.extend(e.ui, { version: '1.10.4', keyCode: { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 } }), e.fn.extend({ focus: (function (t) { return function (i, n) { return typeof i === 'number' ? this.each(function () { const t = this; setTimeout(() => { e(t).focus(), n && n.call(t); }, i); }) : t.apply(this, arguments); }; }(e.fn.focus)), scrollParent() { let t; return t = e.ui.ie && /(static|relative)/.test(this.css('position')) || /absolute/.test(this.css('position')) ? this.parents().filter(function () { return /(relative|absolute|fixed)/.test(e.css(this, 'position')) && /(auto|scroll)/.test(e.css(this, 'overflow') + e.css(this, 'overflow-y') + e.css(this, 'overflow-x')); }).eq(0) : this.parents().filter(function () { return /(auto|scroll)/.test(e.css(this, 'overflow') + e.css(this, 'overflow-y') + e.css(this, 'overflow-x')); }).eq(0), /fixed/.test(this.css('position')) || !t.length ? e(document) : t; }, zIndex(i) { if (i !== t) return this.css('zIndex', i); if (this.length) for (var n, s, a = e(this[0]); a.length && a[0] !== document;) { if (n = a.css('position'), (n === 'absolute' || n === 'relative' || n === 'fixed') && (s = parseInt(a.css('zIndex'), 10), !isNaN(s) && s !== 0)) return s; a = a.parent(); } return 0; }, uniqueId() { return this.each(function () { this.id || (this.id = `ui-id-${++s}`); }); }, removeUniqueId() { return this.each(function () { a.test(this.id) && e(this).removeAttr('id'); }); } }), e.extend(e.expr[':'], { data: e.expr.createPseudo ? e.expr.createPseudo(t => function (i) { return !!e.data(i, t); }) : function (t, i, n) { return !!e.data(t, n[3]); },
    focusable(t) { return i(t, !isNaN(e.attr(t, 'tabindex'))); },
    tabbable(t) {
      let n = e.attr(t, 'tabindex'),
        s = isNaN(n); return (s || n >= 0) && i(t, !s);
    } }), e('<a>').outerWidth(1).jquery || e.each(['Width', 'Height'], (i, n) => {
    function s(t, i, n, s) { return e.each(a, function () { i -= parseFloat(e.css(t, `padding${this}`)) || 0, n && (i -= parseFloat(e.css(t, `border${this}Width`)) || 0), s && (i -= parseFloat(e.css(t, `margin${this}`)) || 0); }), i; } var a = n === 'Width' ? ['Left', 'Right'] : ['Top', 'Bottom'],
      o = n.toLowerCase(),
      r = { innerWidth: e.fn.innerWidth, innerHeight: e.fn.innerHeight, outerWidth: e.fn.outerWidth, outerHeight: e.fn.outerHeight }; e.fn[`inner${n}`] = function (i) { return i === t ? r[`inner${n}`].call(this) : this.each(function () { e(this).css(o, `${s(this, i)}px`); }); }, e.fn[`outer${n}`] = function (t, i) { return typeof t !== 'number' ? r[`outer${n}`].call(this, t) : this.each(function () { e(this).css(o, `${s(this, t, !0, i)}px`); }); };
  }), e.fn.addBack || (e.fn.addBack = function (e) { return this.add(e == null ? this.prevObject : this.prevObject.filter(e)); }), e('<a>').data('a-b', 'a').removeData('a-b').data('a-b') && (e.fn.removeData = (function (t) { return function (i) { return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this); }; }(e.fn.removeData))), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.support.selectstart = 'onselectstart' in document.createElement('div'), e.fn.extend({ disableSelection() { return this.bind(`${e.support.selectstart ? 'selectstart' : 'mousedown'}.ui-disableSelection`, (e) => { e.preventDefault(); }); }, enableSelection() { return this.unbind('.ui-disableSelection'); } }), e.extend(e.ui, { plugin: { add(t, i, n) {
    let s,
      a = e.ui[t].prototype; for (s in n)a.plugins[s] = a.plugins[s] || [], a.plugins[s].push([i, n[s]]);
  },
  call(e, t, i) {
    let n,
      s = e.plugins[t]; if (s && e.element[0].parentNode && e.element[0].parentNode.nodeType !== 11) for (n = 0; s.length > n; n++)e.options[s[n][0]] && s[n][1].apply(e.element, i);
  } },
  hasScroll(t, i) {
    if (e(t).css('overflow') === 'hidden') return !1; let n = i && i === 'left' ? 'scrollLeft' : 'scrollTop',
      s = !1; return t[n] > 0 ? !0 : (t[n] = 1, s = t[n] > 0, t[n] = 0, s);
  } });
}(jQuery)); (function (t, e) {
  let i = 0,
    s = Array.prototype.slice,
    n = t.cleanData; t.cleanData = function (e) { for (var i, s = 0; (i = e[s]) != null; s++) try { t(i).triggerHandler('remove'); } catch (o) {}n(e); }, t.widget = function (i, s, n) {
    let o,
      a,
      r,
      h,
      l = {},
      c = i.split('.')[0]; i = i.split('.')[1], o = `${c}-${i}`, n || (n = s, s = t.Widget), t.expr[':'][o.toLowerCase()] = function (e) { return !!t.data(e, o); }, t[c] = t[c] || {}, a = t[c][i], r = t[c][i] = function (t, i) { return this._createWidget ? (arguments.length && this._createWidget(t, i), e) : new r(t, i); }, t.extend(r, a, { version: n.version, _proto: t.extend({}, n), _childConstructors: [] }), h = new s(), h.options = t.widget.extend({}, h.options), t.each(n, (i, n) => (t.isFunction(n) ? (l[i] = (function () {
      let t = function () { return s.prototype[i].apply(this, arguments); },
        e = function (t) { return s.prototype[i].apply(this, t); }; return function () {
        let i,
          s = this._super,
          o = this._superApply; return this._super = t, this._superApply = e, i = n.apply(this, arguments), this._super = s, this._superApply = o, i;
      };
    }()), e) : (l[i] = n, e))), r.prototype = t.widget.extend(h, { widgetEventPrefix: a ? h.widgetEventPrefix || i : i }, l, { constructor: r, namespace: c, widgetName: i, widgetFullName: o }), a ? (t.each(a._childConstructors, (e, i) => { const s = i.prototype; t.widget(`${s.namespace}.${s.widgetName}`, r, i._proto); }), delete a._childConstructors) : s._childConstructors.push(r), t.widget.bridge(i, r);
  }, t.widget.extend = function (i) { for (var n, o, a = s.call(arguments, 1), r = 0, h = a.length; h > r; r++) for (n in a[r])o = a[r][n], a[r].hasOwnProperty(n) && o !== e && (i[n] = t.isPlainObject(o) ? t.isPlainObject(i[n]) ? t.widget.extend({}, i[n], o) : t.widget.extend({}, o) : o); return i; }, t.widget.bridge = function (i, n) {
    const o = n.prototype.widgetFullName || i; t.fn[i] = function (a) {
      let r = typeof a === 'string',
        h = s.call(arguments, 1),
        l = this; return a = !r && h.length ? t.widget.extend.apply(null, [a].concat(h)) : a, r ? this.each(function () {
        let s,
          n = t.data(this, o); return n ? t.isFunction(n[a]) && a.charAt(0) !== '_' ? (s = n[a](...h), s !== n && s !== e ? (l = s && s.jquery ? l.pushStack(s.get()) : s, !1) : e) : t.error(`no such method '${a}' for ${i} widget instance`) : t.error(`cannot call methods on ${i} prior to initialization; ` + `attempted to call method '${a}'`);
      }) : this.each(function () { const e = t.data(this, o); e ? e.option(a || {})._init() : t.data(this, o, new n(a, this)); }), l;
    };
  }, t.Widget = function () {}, t.Widget._childConstructors = [], t.Widget.prototype = { widgetName: 'widget',
    widgetEventPrefix: '',
    defaultElement: '<div>',
    options: { disabled: !1, create: null },
    _createWidget(e, s) { s = t(s || this.defaultElement || this)[0], this.element = t(s), this.uuid = i++, this.eventNamespace = `.${this.widgetName}${this.uuid}`, this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e), this.bindings = t(), this.hoverable = t(), this.focusable = t(), s !== this && (t.data(s, this.widgetFullName, this), this._on(!0, this.element, { remove(t) { t.target === s && this.destroy(); } }), this.document = t(s.style ? s.ownerDocument : s.document || s), this.window = t(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger('create', null, this._getCreateEventData()), this._init(); },
    _getCreateOptions: t.noop,
    _getCreateEventData: t.noop,
    _create: t.noop,
    _init: t.noop,
    destroy() { this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr('aria-disabled').removeClass(`${this.widgetFullName}-disabled ` + 'ui-state-disabled'), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass('ui-state-hover'), this.focusable.removeClass('ui-state-focus'); },
    _destroy: t.noop,
    widget() { return this.element; },
    option(i, s) {
      let n,
        o,
        a,
        r = i; if (arguments.length === 0) return t.widget.extend({}, this.options); if (typeof i === 'string') if (r = {}, n = i.split('.'), i = n.shift(), n.length) { for (o = r[i] = t.widget.extend({}, this.options[i]), a = 0; n.length - 1 > a; a++)o[n[a]] = o[n[a]] || {}, o = o[n[a]]; if (i = n.pop(), arguments.length === 1) return o[i] === e ? null : o[i]; o[i] = s; } else { if (arguments.length === 1) return this.options[i] === e ? null : this.options[i]; r[i] = s; } return this._setOptions(r), this;
    },
    _setOptions(t) { let e; for (e in t) this._setOption(e, t[e]); return this; },
    _setOption(t, e) { return this.options[t] = e, t === 'disabled' && (this.widget().toggleClass(`${this.widgetFullName}-disabled ui-state-disabled`, !!e).attr('aria-disabled', e), this.hoverable.removeClass('ui-state-hover'), this.focusable.removeClass('ui-state-focus')), this; },
    enable() { return this._setOption('disabled', !1); },
    disable() { return this._setOption('disabled', !0); },
    _on(i, s, n) {
      let o,
        a = this; typeof i !== 'boolean' && (n = s, s = i, i = !1), n ? (s = o = t(s), this.bindings = this.bindings.add(s)) : (n = s, s = this.element, o = this.widget()), t.each(n, (n, r) => {
        function h() { return i || a.options.disabled !== !0 && !t(this).hasClass('ui-state-disabled') ? (typeof r === 'string' ? a[r] : r).apply(a, arguments) : e; } typeof r !== 'string' && (h.guid = r.guid = r.guid || h.guid || t.guid++); let l = n.match(/^(\w+)\s*(.*)$/),
          c = l[1] + a.eventNamespace,
          u = l[2]; u ? o.delegate(u, c, h) : s.bind(c, h);
      });
    },
    _off(t, e) { e = (e || '').split(' ').join(`${this.eventNamespace} `) + this.eventNamespace, t.unbind(e).undelegate(e); },
    _delay(t, e) { function i() { return (typeof t === 'string' ? s[t] : t).apply(s, arguments); } var s = this; return setTimeout(i, e || 0); },
    _hoverable(e) { this.hoverable = this.hoverable.add(e), this._on(e, { mouseenter(e) { t(e.currentTarget).addClass('ui-state-hover'); }, mouseleave(e) { t(e.currentTarget).removeClass('ui-state-hover'); } }); },
    _focusable(e) { this.focusable = this.focusable.add(e), this._on(e, { focusin(e) { t(e.currentTarget).addClass('ui-state-focus'); }, focusout(e) { t(e.currentTarget).removeClass('ui-state-focus'); } }); },
    _trigger(e, i, s) {
      let n,
        o,
        a = this.options[e]; if (s = s || {}, i = t.Event(i), i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(), i.target = this.element[0], o = i.originalEvent) for (n in o)n in i || (i[n] = o[n]); return this.element.trigger(i, s), !(t.isFunction(a) && a.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented());
    } }, t.each({ show: 'fadeIn', hide: 'fadeOut' }, (e, i) => {
    t.Widget.prototype[`_${e}`] = function (s, n, o) {
      typeof n === 'string' && (n = { effect: n }); let a,
        r = n ? n === !0 || typeof n === 'number' ? i : n.effect || i : e; n = n || {}, typeof n === 'number' && (n = { duration: n }), a = !t.isEmptyObject(n), n.complete = o, n.delay && s.delay(n.delay), a && t.effects && t.effects.effect[r] ? s[e](n) : r !== e && s[r] ? s[r](n.duration, n.easing, o) : s.queue(function (i) { t(this)[e](), o && o.call(s[0]), i(); });
    };
  });
}(jQuery)); (function (t) {
  let e = !1; t(document).mouseup(() => { e = !1; }), t.widget('ui.mouse', { version: '1.10.4',
    options: { cancel: 'input,textarea,button,select,option', distance: 1, delay: 0 },
    _mouseInit() { const e = this; this.element.bind(`mousedown.${this.widgetName}`, t => e._mouseDown(t)).bind(`click.${this.widgetName}`, i => (!0 === t.data(i.target, `${e.widgetName}.preventClickEvent`) ? (t.removeData(i.target, `${e.widgetName}.preventClickEvent`), i.stopImmediatePropagation(), !1) : undefined)), this.started = !1; },
    _mouseDestroy() { this.element.unbind(`.${this.widgetName}`), this._mouseMoveDelegate && t(document).unbind(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).unbind(`mouseup.${this.widgetName}`, this._mouseUpDelegate); },
    _mouseDown(i) {
      if (!e) {
        this._mouseStarted && this._mouseUp(i), this._mouseDownEvent = i; let s = this,
          n = i.which === 1,
          a = typeof this.options.cancel === 'string' && i.target.nodeName ? t(i.target).closest(this.options.cancel).length : !1; return n && !a && this._mouseCapture(i) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(() => { s.mouseDelayMet = !0; }, this.options.delay)), this._mouseDistanceMet(i) && this._mouseDelayMet(i) && (this._mouseStarted = this._mouseStart(i) !== !1, !this._mouseStarted) ? (i.preventDefault(), !0) : (!0 === t.data(i.target, `${this.widgetName}.preventClickEvent`) && t.removeData(i.target, `${this.widgetName}.preventClickEvent`), this._mouseMoveDelegate = function (t) { return s._mouseMove(t); }, this._mouseUpDelegate = function (t) { return s._mouseUp(t); }, t(document).bind(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).bind(`mouseup.${this.widgetName}`, this._mouseUpDelegate), i.preventDefault(), e = !0, !0)) : !0;
      }
    },
    _mouseMove(e) { return t.ui.ie && (!document.documentMode || document.documentMode < 9) && !e.button ? this._mouseUp(e) : this._mouseStarted ? (this._mouseDrag(e), e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1, this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted); },
    _mouseUp(e) { return t(document).unbind(`mousemove.${this.widgetName}`, this._mouseMoveDelegate).unbind(`mouseup.${this.widgetName}`, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, e.target === this._mouseDownEvent.target && t.data(e.target, `${this.widgetName}.preventClickEvent`, !0), this._mouseStop(e)), !1; },
    _mouseDistanceMet(t) { return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance; },
    _mouseDelayMet() { return this.mouseDelayMet; },
    _mouseStart() {},
    _mouseDrag() {},
    _mouseStop() {},
    _mouseCapture() { return !0; } });
}(jQuery)); (function (t) {
  const e = 5; t.widget('ui.slider', t.ui.mouse, { version: '1.10.4',
    widgetEventPrefix: 'slide',
    options: { animate: !1, distance: 0, max: 100, min: 0, orientation: 'horizontal', range: !1, step: 1, value: 0, values: null, change: null, slide: null, start: null, stop: null },
    _create() { this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass(`ui-slider ui-slider-${this.orientation} ui-widget` + ' ui-widget-content' + ' ui-corner-all'), this._refresh(), this._setOption('disabled', this.options.disabled), this._animateOff = !1; },
    _refresh() { this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue(); },
    _createHandles() {
      let e,
        i,
        s = this.options,
        n = this.element.find('.ui-slider-handle').addClass('ui-state-default ui-corner-all'),
        a = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
        o = []; for (i = s.values && s.values.length || 1, n.length > i && (n.slice(i).remove(), n = n.slice(0, i)), e = n.length; i > e; e++)o.push(a); this.handles = n.add(t(o.join('')).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function (e) { t(this).data('ui-slider-handle-index', e); });
    },
    _createRange() {
      let e = this.options,
        i = ''; e.range ? (e.range === !0 && (e.values ? e.values.length && e.values.length !== 2 ? e.values = [e.values[0], e.values[0]] : t.isArray(e.values) && (e.values = e.values.slice(0)) : e.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass('ui-slider-range-min ui-slider-range-max').css({ left: '', bottom: '' }) : (this.range = t('<div></div>').appendTo(this.element), i = 'ui-slider-range ui-widget-header ui-corner-all'), this.range.addClass(i + (e.range === 'min' || e.range === 'max' ? ` ui-slider-range-${e.range}` : ''))) : (this.range && this.range.remove(), this.range = null);
    },
    _setupEvents() { const t = this.handles.add(this.range).filter('a'); this._off(t), this._on(t, this._handleEvents), this._hoverable(t), this._focusable(t); },
    _destroy() { this.handles.remove(), this.range && this.range.remove(), this.element.removeClass('ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all'), this._mouseDestroy(); },
    _mouseCapture(e) {
      let i,
        s,
        n,
        a,
        o,
        r,
        l,
        h,
        u = this,
        c = this.options; return c.disabled ? !1 : (this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }, this.elementOffset = this.element.offset(), i = { x: e.pageX, y: e.pageY }, s = this._normValueFromMouse(i), n = this._valueMax() - this._valueMin() + 1, this.handles.each(function (e) { const i = Math.abs(s - u.values(e)); (n > i || n === i && (e === u._lastChangedValue || u.values(e) === c.min)) && (n = i, a = t(this), o = e); }), r = this._start(e, o), r === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = o, a.addClass('ui-state-active').focus(), l = a.offset(), h = !t(e.target).parents().addBack().is('.ui-slider-handle'), this._clickOffset = h ? { left: 0, top: 0 } : { left: e.pageX - l.left - a.width() / 2, top: e.pageY - l.top - a.height() / 2 - (parseInt(a.css('borderTopWidth'), 10) || 0) - (parseInt(a.css('borderBottomWidth'), 10) || 0) + (parseInt(a.css('marginTop'), 10) || 0) }, this.handles.hasClass('ui-state-hover') || this._slide(e, o, s), this._animateOff = !0, !0));
    },
    _mouseStart() { return !0; },
    _mouseDrag(t) {
      let e = { x: t.pageX, y: t.pageY },
        i = this._normValueFromMouse(e); return this._slide(t, this._handleIndex, i), !1;
    },
    _mouseStop(t) { return this.handles.removeClass('ui-state-active'), this._mouseSliding = !1, this._stop(t, this._handleIndex), this._change(t, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1; },
    _detectOrientation() { this.orientation = this.options.orientation === 'vertical' ? 'vertical' : 'horizontal'; },
    _normValueFromMouse(t) {
      let e,
        i,
        s,
        n,
        a; return this.orientation === 'horizontal' ? (e = this.elementSize.width, i = t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (e = this.elementSize.height, i = t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), s = i / e, s > 1 && (s = 1), s < 0 && (s = 0), this.orientation === 'vertical' && (s = 1 - s), n = this._valueMax() - this._valueMin(), a = this._valueMin() + s * n, this._trimAlignValue(a);
    },
    _start(t, e) { const i = { handle: this.handles[e], value: this.value() }; return this.options.values && this.options.values.length && (i.value = this.values(e), i.values = this.values()), this._trigger('start', t, i); },
    _slide(t, e, i) {
      let s,
        n,
        a; this.options.values && this.options.values.length ? (s = this.values(e ? 0 : 1), this.options.values.length === 2 && this.options.range === !0 && (e === 0 && i > s || e === 1 && s > i) && (i = s), i !== this.values(e) && (n = this.values(), n[e] = i, a = this._trigger('slide', t, { handle: this.handles[e], value: i, values: n }), s = this.values(e ? 0 : 1), a !== !1 && this.values(e, i))) : i !== this.value() && (a = this._trigger('slide', t, { handle: this.handles[e], value: i }), a !== !1 && this.value(i));
    },
    _stop(t, e) { const i = { handle: this.handles[e], value: this.value() }; this.options.values && this.options.values.length && (i.value = this.values(e), i.values = this.values()), this._trigger('stop', t, i); },
    _change(t, e) { if (!this._keySliding && !this._mouseSliding) { const i = { handle: this.handles[e], value: this.value() }; this.options.values && this.options.values.length && (i.value = this.values(e), i.values = this.values()), this._lastChangedValue = e, this._trigger('change', t, i); } },
    value(t) { return arguments.length ? (this.options.value = this._trimAlignValue(t), this._refreshValue(), this._change(null, 0), undefined) : this._value(); },
    values(e, i) {
      let s,
        n,
        a; if (arguments.length > 1) return this.options.values[e] = this._trimAlignValue(i), this._refreshValue(), this._change(null, e), undefined; if (!arguments.length) return this._values(); if (!t.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(e) : this.value(); for (s = this.options.values, n = arguments[0], a = 0; s.length > a; a += 1)s[a] = this._trimAlignValue(n[a]), this._change(null, a); this._refreshValue();
    },
    _setOption(e, i) {
      let s,
        n = 0; switch (e === 'range' && this.options.range === !0 && (i === 'min' ? (this.options.value = this._values(0), this.options.values = null) : i === 'max' && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), t.isArray(this.options.values) && (n = this.options.values.length), t.Widget.prototype._setOption.apply(this, arguments), e) { case 'orientation':this._detectOrientation(), this.element.removeClass('ui-slider-horizontal ui-slider-vertical').addClass(`ui-slider-${this.orientation}`), this._refreshValue(); break; case 'value':this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1; break; case 'values':for (this._animateOff = !0, this._refreshValue(), s = 0; n > s; s += 1) this._change(null, s); this._animateOff = !1; break; case 'min':case 'max':this._animateOff = !0, this._refreshValue(), this._animateOff = !1; break; case 'range':this._animateOff = !0, this._refresh(), this._animateOff = !1; }
    },
    _value() { let t = this.options.value; return t = this._trimAlignValue(t); },
    _values(t) {
      let e,
        i,
        s; if (arguments.length) return e = this.options.values[t], e = this._trimAlignValue(e); if (this.options.values && this.options.values.length) { for (i = this.options.values.slice(), s = 0; i.length > s; s += 1)i[s] = this._trimAlignValue(i[s]); return i; } return [];
    },
    _trimAlignValue(t) {
      if (this._valueMin() >= t) return this._valueMin(); if (t >= this._valueMax()) return this._valueMax(); let e = this.options.step > 0 ? this.options.step : 1,
        i = (t - this._valueMin()) % e,
        s = t - i; return 2 * Math.abs(i) >= e && (s += i > 0 ? e : -e), parseFloat(s.toFixed(5));
    },
    _valueMin() { return this.options.min; },
    _valueMax() { return this.options.max; },
    _refreshValue() {
      let e,
        i,
        s,
        n,
        a,
        o = this.options.range,
        r = this.options,
        l = this,
        h = this._animateOff ? !1 : r.animate,
        u = {}; this.options.values && this.options.values.length ? this.handles.each(function (s) { i = 100 * ((l.values(s) - l._valueMin()) / (l._valueMax() - l._valueMin())), u[l.orientation === 'horizontal' ? 'left' : 'bottom'] = `${i}%`, t(this).stop(1, 1)[h ? 'animate' : 'css'](u, r.animate), l.options.range === !0 && (l.orientation === 'horizontal' ? (s === 0 && l.range.stop(1, 1)[h ? 'animate' : 'css']({ left: `${i}%` }, r.animate), s === 1 && l.range[h ? 'animate' : 'css']({ width: `${i - e}%` }, { queue: !1, duration: r.animate })) : (s === 0 && l.range.stop(1, 1)[h ? 'animate' : 'css']({ bottom: `${i}%` }, r.animate), s === 1 && l.range[h ? 'animate' : 'css']({ height: `${i - e}%` }, { queue: !1, duration: r.animate }))), e = i; }) : (s = this.value(), n = this._valueMin(), a = this._valueMax(), i = a !== n ? 100 * ((s - n) / (a - n)) : 0, u[this.orientation === 'horizontal' ? 'left' : 'bottom'] = `${i}%`, this.handle.stop(1, 1)[h ? 'animate' : 'css'](u, r.animate), o === 'min' && this.orientation === 'horizontal' && this.range.stop(1, 1)[h ? 'animate' : 'css']({ width: `${i}%` }, r.animate), o === 'max' && this.orientation === 'horizontal' && this.range[h ? 'animate' : 'css']({ width: `${100 - i}%` }, { queue: !1, duration: r.animate }), o === 'min' && this.orientation === 'vertical' && this.range.stop(1, 1)[h ? 'animate' : 'css']({ height: `${i}%` }, r.animate), o === 'max' && this.orientation === 'vertical' && this.range[h ? 'animate' : 'css']({ height: `${100 - i}%` }, { queue: !1, duration: r.animate }));
    },
    _handleEvents: { keydown(i) {
      let s,
        n,
        a,
        o,
        r = t(i.target).data('ui-slider-handle-index'); switch (i.keyCode) { case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if (i.preventDefault(), !this._keySliding && (this._keySliding = !0, t(i.target).addClass('ui-state-active'), s = this._start(i, r), s === !1)) return; } switch (o = this.options.step, n = a = this.options.values && this.options.values.length ? this.values(r) : this.value(), i.keyCode) { case t.ui.keyCode.HOME:a = this._valueMin(); break; case t.ui.keyCode.END:a = this._valueMax(); break; case t.ui.keyCode.PAGE_UP:a = this._trimAlignValue(n + (this._valueMax() - this._valueMin()) / e); break; case t.ui.keyCode.PAGE_DOWN:a = this._trimAlignValue(n - (this._valueMax() - this._valueMin()) / e); break; case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if (n === this._valueMax()) return; a = this._trimAlignValue(n + o); break; case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if (n === this._valueMin()) return; a = this._trimAlignValue(n - o); } this._slide(i, r, a);
    },
    click(t) { t.preventDefault(); },
    keyup(e) { const i = t(e.target).data('ui-slider-handle-index'); this._keySliding && (this._keySliding = !1, this._stop(e, i), this._change(e, i), t(e.target).removeClass('ui-state-active')); } } });
}(jQuery));
